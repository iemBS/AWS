Create Transaction
Note:
  -Guidance @ https://dev.mysql.com/doc/refman/5.7/en/set-transaction.html
  -The isolation level is used for operations on InnoDB tables
  -Without GLOBAL or SESSION keyword, the statement applies only to the next single transaction performed within the session. Subsequent transactions revert to using the session value of the named characteristics
  -Guidance @ https://dev.mysql.com/doc/refman/5.7/en/information-schema-innodb-trx-table.html
  -See current open transactions with 
      SELECT * FROM information_schema.innodb_trx
  -The TRX_ID column in information_schema.innodb_trx only has values if the transaction is read-only and non-locking.
  -Default isolation level is "repeatable read"
  -When using the default REPEATABLE READ isolation level, the first UPDATE acquires an x-lock on each row that it reads and does not release any of them.
  -Guidance @ https://dev.mysql.com/doc/refman/5.7/en/innodb-transaction-isolation-levels.html#isolevel_repeatable-read
  -By default, MySQL runs with autocommit mode enabled. 
  -Statements that trigger an implicit commit @ https://dev.mysql.com/doc/refman/5.7/en/implicit-commit.html
  -Guidance @ https://www.oreilly.com/library/view/mysql-in-a/9780596514334/re72.html
  -Guidance @ https://www.w3resource.com/mysql/mysql-transaction.php
  -A rollback to a savepoint will implicitly commit everything up to that savepoint in the transaction @ https://www.w3resource.com/mysql/mysql-transaction.php
  -Guidance @ https://dev.mysql.com/doc/refman/5.7/en/savepoint.html
  -Components of a transaction
    -scope
    -isolation level
    -access mode
    -create save point
    -rollback to save point
    -release save point
    -commmit
      -Two procedure instances with the same transaction code and savepoint names, will throw an error for the second instance started because the first instance committed and deleted the savepoint name. 
  -All savepoints of the current transaction are deleted if you execute a COMMIT, or a ROLLBACK that does not name a savepoint.
  -The RELEASE SAVEPOINT statement removes the named savepoint from the set of savepoints of the current transaction. 
  -When a rollback to savepoint occurs, savepoints that were set at a later time than the named savepoint are deleted.
  -The SAVEPOINT statement sets a named transaction savepoint with a name of identifier. If the current transaction has a savepoint with the same name, the old savepoint is deleted and a new one is set.
  -
Main Success Scenario: 
  1.xxx:fill
