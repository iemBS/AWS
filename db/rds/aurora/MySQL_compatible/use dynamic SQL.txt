Use Dynamic SQL
Pre-Conditions:
  -Procedure parameters and/or local variables will not be used in a prepared statement within a procedure and the prepared statement then used after the procedure has ended. The error caused by that scenario is noted @ https://dev.mysql.com/doc/refman/5.7/en/prepare.html
Note:
  -Guidance @ 
    -https://dev.mysql.com/doc/refman/5.7/en/prepare.html
    -https://dev.mysql.com/doc/refman/5.6/en/sql-prepared-statements.html
      -SQL syntax for prepared statements does not support multi-statements (that is, multiple statements within a single string separated by ; characters).
    -https://stackoverflow.com/questions/190776/how-to-have-dynamic-sql-in-mysql-stored-procedure
    -https://dev.mysql.com/doc/refman/5.7/en/execute.html
    -https://dev.mysql.com/doc/refman/5.7/en/deallocate-prepare.html
    -https://mariadb.com/kb/en/prepare-statement/
    -https://dev.mysql.com/doc/refman/5.7/en/statement-caching.html
  -In MySQL, dynamic sql is called a prepared statement. 
  -USE statement CANNOT be used inside a procedure. See @ https://dev.mysql.com/doc/refman/8.0/en/create-procedure.html
  -Local variables and procedure parameters cannot be used within a prepared statement that is created within a procedure accoring to these two links:  
    -https://dev.mysql.com/doc/mysql-reslimits-excerpt/5.7/en/stored-program-restrictions.html
    -https://dev.mysql.com/doc/refman/5.7/en/prepare.html
  -MySQL wants to put prepared statements in the Query Cache. That will not happen if the query resulting from the prepare statement breaks one of the rules @ https://dev.mysql.com/doc/refman/5.7/en/query-cache-operation.html
  -A semi-colon is not needed at the end of string that holds the query for a prepared statement. The PREPARE or EXECUTE command will add a query terimnator.
  -A prepared statement is in the same session as the sql that called it. Ref @ https://dev.mysql.com/doc/refman/5.7/en/sql-prepared-statements.html
Main Success Scenario:
  1. xxx:fill in
Alternatives:
  1a. Use CONCAT function instead
    1a1. See code below
    
        mysql> USE test;
        mysql> CREATE TABLE t1 (a INT NOT NULL);
        mysql> INSERT INTO t1 VALUES (4), (8), (11), (32), (80);

        mysql> SET @table = 't1';
        mysql> SET @s = CONCAT('SELECT * FROM ', @table);

        mysql> PREPARE stmt3 FROM @s;
        mysql> EXECUTE stmt3;
        mysql> DEALLOCATE PREPARE stmt3;
  1b. Want to have more than one statement that ends with semi-colon
    1b1. Have more than one prepared statement because more than one is not allowed in a prepared statement 
  1c. Want to drop a temp table outside of prepared statement, create temp table inside prepared statement, and use it outside prepared statement
    1c1. See query below
    
      DROP TEMPORARY TABLE IF EXISTS Temp_MyTbl;
      SET @qry = 'CREATE TEMPORARY TABLE Temp_MyTbl SELECT 1 As MyCol';
      PREPARE stmt FROM @qry;
        EXECUTE stmt;
        deallocate prepare stmt;

        Select * From Temp_MyTbl;
  1d. Create a prepared statement within a procedure and then use it outside of the procedure after the procedure has completed
    1d1. xxx:fill in & based on what is noted @ https://dev.mysql.com/doc/refman/5.7/en/prepare.html
  1e. See database used in Dynamic SQL query
    1e1. Connected to database on outside is used unless changed inside the dynamic sql
      set @qry = 'select database()';
      PREPARE stmt FROM @qry;
      EXECUTE stmt;
      deallocate prepare stmt; 

