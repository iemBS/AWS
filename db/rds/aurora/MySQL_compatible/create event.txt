Create Event
Note:
  -Guidance @ 
    -https://dev.mysql.com/doc/refman/5.7/en/create-event.html
    -https://dev.mysql.com/doc/refman/5.7/en/event-scheduler.html
    -https://www.mysqltutorial.org/mysql-triggers/working-mysql-scheduled-event/
    -https://dev.mysql.com/doc/refman/5.7/en/event-scheduler-thread-states.html
    -https://www.mysqltutorial.org/mysql-interval/
  -If the event scheduler is not enabled, you can set the event_scheduler system variable to enable and start it. 
  -MySQL Events are also known as “temporal triggers” because they are triggered by time, not by DML events like normal triggers. 
  -Even if you are an admin, you may see "Access denied; you need (at least one of) the SUPER privilege(s) for this operation" when trying to turn on the event_scheduler
  -If event_scheduler has a value of OFF what happens when you create an event
    -Running SHOW EVENTS FROM [MyDb] indicates STATUS = "ENABLED"
    -No error message is showing in MySQL workbench when you create an event in this scenario. 
  -event_scheduler is a parameter in Aurora serverless that cannot be set using a MySQL query. 
  -Even though you can change the event_scheduler parameter in the RDS console, it does not change the event_scheduler system variable in MySQL. 
    -Info @ https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.how-it-works.html
    -Running the below query shows "OFF"
      select @@Global.event_scheduler
    -You get an error message when you run the below to set the system variable to "ON"
      SET GLOBAL event_scheduler = ON;
Main Success Scenario:
  1. See code below 
  
    CREATE EVENT IF NOT EXIST myevent
    ON SCHEDULE AT CURRENT_TIMESTAMP
    DO
      UPDATE myschema.mytable SET mycol = mycol + 1;
     
  2. xxx:fill in
  
Alternatives:
  1a. Keep event from disappearing after schedule is complete
    1a1. See code below

      CREATE EVENT myevent
      ON SCHEDULE AT CURRENT_TIMESTAMP
      ON COMPLETION PRESERVE
      DO
        UPDATE myschema.mytable SET mycol = mycol + 1;
        
    1a2. Go to step 2
    
  1b. Be explicit about event going away after the schedule is complete
    1b1. See code below
    
      CREATE EVENT myevent
      ON SCHEDULE AT CURRENT_TIMESTAMP
      ON COMPLETION NOT PRESERVE
      DO
        UPDATE myschema.mytable SET mycol = mycol + 1;
      
    1b2. Go to step 2
    
  1c. Execute event more than once before it goes away
    1c1. xxx:fill in
  1d. Execute more than one statement within an event
    1d1. xxx:fill in
  1e. Event does not start after it is created
    1e1. Confirm event scheduler is off.
      select @@Global.event_scheduler # A value of "OFF", means it is not on. 
    1e2. Turn event scheduler on.
      SET GLOBAL event_scheduler = ON; 
  1f. Add an additional schedule to an event
    1f1. xxx:fill in
  1g. Execute event 10 seconds after it is created
  
      CREATE EVENT myevent
      ON SCHEDULE AT CURRENT_TIMESTAMP + INTERVAL 10 SECOND
      ON COMPLETION PRESERVE
      DO
        UPDATE myschema.mytable SET mycol = mycol + 1;
