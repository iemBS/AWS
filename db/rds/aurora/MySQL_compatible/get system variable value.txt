Get System Variable Value
Note:
  -Guidance @ 
    -System Variable index @ https://dev.mysql.com/doc/refman/5.7/en/dynindex-sysvar.html
  -Guidance @ 
    -https://dev.mysql.com/doc/refman/8.0/en/server-status-variables.html
    -https://mariadb.com/kb/en/show-variables/
    -https://dev.mysql.com/doc/refman/5.7/en/show-variables.html
  -list of dynamic system variables @ https://dev.mysql.com/doc/refman/5.7/en/dynamic-system-variables.html
    -Can be set at run time:
  -For SHOW VARIABLES, if you specify neither GLOBAL nor SESSION, MySQL returns SESSION values. Ref @ https://dev.mysql.com/doc/refman/5.7/en/using-system-variables.html
  -Aurora has parameters (aka system variables) at the DB Cluster and DB instance (instance of a DB Cluster) levels. Ref @ https://github.com/sburnell/AWS/edit/master/db/rds/aurora/MySQL_compatible/get%20system%20variable%20value.txt
    -List of Cluster Level parameters @ https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Reference.html#AuroraMySQL.Reference.Parameters.Cluster
    -List of Instance Level parameters @ https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Reference.html#AuroraMySQL.Reference.Parameters.Instance
    -MySQL parameters and status variables that are not accessible in Aurora @ https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Reference.html#AuroraMySQL.Reference.Parameters.Inapplicable
Pre-Conditions:
  -System Variables where the value is not visible from a MySQL client because of xxx
    -sql_mode: 
  -Limitations in Serverless v1:
    -Session variables not usable when using TLS/SSL between client and Aurora. Ref @ https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html
Main Success Scenario:
  1. Show [table name] to see the current values used by the running MySQL instance
       Show Variables 
Alternatives:
  1a. Limit Show method to return only specific rows 
    1a1. SHOW Global Status Where Variable_Name = 'Handler_savepoint'
  1b. Get value of single global system variable 
    1b1. SELECT @@GLOBAL.innodb_data_file_path;
  1c. Get value of single Session system variable
    1b1. SELECT @@SESSION.pseudo_thread_id
  1d. Show only global status system variables
    1d1. SHOW GLOBAL STATUS;
  1e. Limit Show method to return only specific rows using LIKE
    1e1. SHOW Global Status Like 'Handler_savepoint'  
  1f. From the system table instead
    1f1. See code below
      Select
        *
      From
        (
          Select
            'Global' As Scope,
            VARIABLE_NAME,
                  VARIABLE_VALUE
          From
            Information_Schema.GLOBAL_VARIABLES 

          Union All

          Select
            'Session' As Scope,
            VARIABLE_NAME,
                  VARIABLE_VALUE
          From
            Information_Schema.SESSION_VARIABLES 
          ) t
      Order By
        Variable_Name
    
  1g. From the system table and returns one row for each variable even if has both global and session scope
  
      Select
      Scope,
        VARIABLE_NAME,
        VARIABLE_VALUE
    From
      (
        Select
          'Global; Session' As Scope,
          g.VARIABLE_NAME,
                g.VARIABLE_VALUE
        From
          Information_Schema.GLOBAL_VARIABLES g
                Inner Join Information_Schema.SESSION_VARIABLES s On 
            g.VARIABLE_NAME = s.VARIABLE_NAME
                    And
                    g.VARIABLE_VALUE = s.VARIABLE_VALUE

            Union All 

        Select
          'Global; Session' As Scope,
          g.VARIABLE_NAME,
                Concat(g.VARIABLE_VALUE,'; ',s.VARIABLE_VALUE) As VARIABLE_VALUE
        From
          Information_Schema.GLOBAL_VARIABLES g
                Inner Join Information_Schema.SESSION_VARIABLES s On 
            g.VARIABLE_NAME = s.VARIABLE_NAME
                    And
                    g.VARIABLE_VALUE <> s.VARIABLE_VALUE


            Union All

            Select
          'Global' As Scope,
          VARIABLE_NAME,
                VARIABLE_VALUE
        From
          Information_Schema.GLOBAL_VARIABLES
        Where
          VARIABLE_NAME Not In (Select VARIABLE_NAME From Information_Schema.SESSION_VARIABLES)

        Union All 

            Select
          'Session' As Scope,
          VARIABLE_NAME,
                VARIABLE_VALUE
        From
          Information_Schema.SESSION_VARIABLES
        Where
          VARIABLE_NAME Not In (Select VARIABLE_NAME From Information_Schema.GLOBAL_VARIABLES)
        ) t
    Order By
      Variable_Name
      
