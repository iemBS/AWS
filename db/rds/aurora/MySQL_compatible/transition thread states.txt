Transition Thread States
Note:
  -guidance @
    -https://dev.mysql.com/doc/refman/5.7/en/general-thread-states.html
    -https://dev.mysql.com/doc/extending-mysql/5.7/en/mysql-threads.html
    -https://dev.mysql.com/doc/refman/5.7/en/query-cache-thread-states.html
    -https://dev.mysql.com/doc/refman/5.7/en/source-thread-states.html
    -https://dev.mysql.com/doc/refman/5.7/en/event-scheduler-thread-states.html
    -https://dev.mysql.com/doc/refman/5.7/en/mysql-cluster-thread-states.html
    -https://dev.mysql.com/doc/refman/5.7/en/thread-information.html
    -https://dev.mysql.com/doc/refman/5.7/en/thread-commands.html
    -https://stackoverflow.com/questions/2766785/fixing-lock-wait-timeout-exceeded-try-restarting-transaction-for-a-stuck-my/16861630#16861630
    -https://dev.mysql.com/doc/refman/5.7/en/performance-schema-threads-table.html
    -https://dev.mysql.com/doc/internals/en/sleep.html
    -https://dev.mysql.com/blog-archive/mysql-connection-handling-and-scaling/
    -https://dev.mysql.com/doc/dev/mysql-server/latest/page_protocol_connection_phase.html
    -https://dev.mysql.com/doc/dev/mysql-server/latest/page_protocol_command_phase.html
  -threads may also be called connections or processes here
  -the connection phase precedes the command phase
  -all the threads we are looking at are in the command phase
  -only foreground threads visible in Information_Schema.ProcessList table
  -foreground and background threads visible in performance_schema.threads table
    -Performance needs to be enabled in Aurora to see the performance_schema.threads table
  -thread types
    -general
    -query cache: associated with the query cache
    -Binlog Dump: On the replication source. If you see no Binlog Dump threads on a source, this means that replication is not running; that is, that no replicas are currently connected.
    -Event Scheduler: Threads that are created to execute scheduled events, or threads that terminate the scheduler.
  -foreground threads
    -xxx
  -background threads
    -xxx
  -"starting" is the first state at the beginning of statement execution.
  -thread command 
    -Binlog Dump: This is a thread on a replication source for sending binary log contents to a replica.
    -Change user: The thread is executing a change user operation.
    -Close stmt: The thread is closing a prepared statement.
    -Connect: A replica is connected to its source.
    -Connect Out: A replica is connecting to its source.
    -Create DB: The thread is executing a create database operation.
    -Daemon: This thread is internal to the server, not a thread that services a client connection.
    -Debug: The thread is generating debugging information.
    -Delayed insert: The thread is a delayed insert handler.
    -Drop DB: The thread is executing a drop database operation.
    -Error
    -Execute: The thread is executing a prepared statement.
    -Fetch: The thread is fetching the results from executing a prepared statement.
    -Field List: The thread is retrieving information for table columns.
    -Init DB: The thread is selecting a default database.
    -Kill: The thread is killing another thread.
    -Long Data: The thread is retrieving long data in the result of executing a prepared statement.
    -Ping: The thread is handling a server ping request.
    -Prepare: The thread is preparing a prepared statement.
    -Processlist: The thread is producing information about server threads.
    -Query: The thread is executing a statement.
    -Quit: The thread is terminating.
    -Refresh: The thread is flushing table, logs, or caches, or resetting status variable or replication server information.
    -Register Slave: The thread is registering a replica server.
    -Reset stmt: The thread is resetting a prepared statement.
    -Set option: The thread is setting or resetting a client statement execution option.
    -Shutdown: The thread is shutting down the server.
    -Sleep: The thread is waiting for the client to send a new statement to it.
    -Statistics: The thread is producing server status information.
  -Possible thread command and type combos
    -Connect, login
    -Query, NULL
    -Query, checking permissions
    -Query, checking query cache for query
    -Query, closing tables
    -Query, creating table
    -Query, delayed commit ok initiated
    -Query, deleting from reference tables
    -Query, delayed send ok intiated
    -Query, end
    -Query, executing
    -Query, freeing items
    -Query, init
    -Query, Opening tables
    -Query, optimizing
    -Query, removing tmp table
    -Query, Sending data
    -Query, Sending to client
    -Query, starting
    -Query, statistics
    -Query, System lock
    -Query, update
    -Query, updating
    -Query, updating reference tables
    -Query, user sleep
    -Sleep, NULL
    -Sleep, cleaned up
    -Sleep, cleaning up
    -What other combos are possible?
  -Thread pool system variables not available from client for aurora. Ref @ https://dev.mysql.com/doc/refman/5.7/en/thread-pool-operation.html
  -In MySQL,the thread pool separates connections and threads, so there is no fixed relationship between connections and the threads that execute statements received from those connections. 
    -Aurora does not use the MySQL thread pooling. 
    -Aurora separates threads from connections. Ref @ https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Managing.Tuning.concepts.html#AuroraMySQL.Managing.Tuning.concepts.processes.pool
  -The "select sleep(10)" query will have a thread command of "Query" and a thread state of "user sleep". 
Main Succes Scenario:
  1. "Transition from 'cleaning up' to 'cleaned up'"
Alternatives:
  1a. "Transition from 'cleaned up' to 'xxx'"
  1b. "Transition from 'freeing items' to 'cleaning up'"
  1c. "Transition from 'query end' to 'freeing items'"
  
  
Transition from 'cleaning up' to 'cleaned up'
Main Success Scenario:
  1. Show "cleaning up" state for XXX seconds
  2. Show "cleaned up" state 
  
  
Transition from 'query end' to 'freeing items'
Note:
  -"query end" state occurs after processing a query 
Main Success Scenario:
  1. xxx:fill in 
  
  
Transition from 'cleaned up' to 'xxx'
Note:
  -
Main Success Scenario:
  1. xxx:fill in 
  
  
Transition from 'freeing items' to 'cleaning up'
Note:
  -Some freeing of items done during the "freeing items" state involves the query cache
Main Success Scenario:
  1.
