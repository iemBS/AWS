Use Group_Concat Function
Note:
  -Guidance @
    -https://www.mysqltutorial.org/mysql-group_concat/
  -If result of group_concat gets truncated use "Set @@session.group_concat_max_len = [some value]" to increase the default value of the session scope of the group_concat_max_len system variable. 
Main Success Scenario:
  1. Get Parameter defs on a single line per routine
  
    Select
      Specific_Schema,
      Routine_Type,
      Specific_Name,
        Group_Concat(
        RtnParamDef
          Order By RtnParamDef
          SEPARATOR ';'
        ) As RtnParamsDef
    From
      (
        Select
          Specific_Schema,
          Routine_Type,
          Specific_Name,
          Concat(
            Ordinal_Position,'|',
            Parameter_Mode,'|',
            Parameter_Name,'|',
            DTD_Identifier,'|', 
            IFNULL(Character_Set_Name,''),'|',
            IFNULL(Collation_Name,'')
          ) As RtnParamDef
        From
          Information_Schema.Parameters
        Where
          Routine_Type In ('PROCEDURE','FUNCTION')
                And
                Specific_Schema Not In 
                (
            'mysql',
                    'sys'
                )
        ) t
    Group By
      Specific_Schema,
        Routine_Type,
        Specific_Name
        
Alternatives:
  1a. More compact way of getting routine params on a single line
    1a1. See code below

      Select
        Specific_Schema,
        Routine_Type,
        Specific_Name,
        Group_Concat(
        Concat(Ordinal_Position,'|',Parameter_Mode,'|',Parameter_Name,'|',DTD_Identifier,'|',IFNULL(Character_Set_Name,''),'|',IFNULL(Collation_Name,'')) 
          Order By Concat(Ordinal_Position,'|',Parameter_Mode,'|',Parameter_Name,'|',DTD_Identifier,'|',IFNULL(Character_Set_Name,''),'|',IFNULL(Collation_Name,'')) 
          SEPARATOR ';'
        ) As RtnParamsDef
      From
        Information_Schema.Parameters
      Where
        Routine_Type In ('PROCEDURE','FUNCTION')
        And
        Specific_Schema Not In 
        (
          'mysql',
          'sys'
        )
      Group By
        Specific_Schema,
        Routine_Type,
        Specific_Name
      Order By # order only exists to confirm the results of this query, if not used to using it
        Specific_Schema,
        Routine_Type,
        Specific_Name
       
  1b. Do not use ORDER BY within Group_Concat (more performance friendly)
    1b1. See code below
    
      Select
        Specific_Schema,
        Routine_Type,
        Specific_Name,
        Group_Concat(
        Concat(Ordinal_Position,'|',Parameter_Mode,'|',Parameter_Name,'|',DTD_Identifier,'|',IFNULL(Character_Set_Name,''),'|',IFNULL(Collation_Name,'')) 
          SEPARATOR ';'
        ) As RtnParamsDef
      From
        Information_Schema.Parameters
      Where
        Routine_Type In ('PROCEDURE','FUNCTION')
        And
        Specific_Schema Not In 
        (
          'mysql',
          'sys'
        )
      Group By
        Specific_Schema,
        Routine_Type,
        Specific_Name
      Order By # order only exists to confirm the results of this query, if not used to using it
        Specific_Schema,
        Routine_Type,
        Specific_Name
        
  1c. Use DISTINCT in Group_Concat to remove duplicates in the group before concatenating them
    1c1. xxx:fill in
