Anti Join Table
Note:
  -guidance @
    -https://www.sqlshack.com/t-sql-commands-performance-comparison-not-vs-not-exists-vs-left-join-vs-except/
  -methods ordered from fastest to slowest run time
    -xxx:fill in 
  -methods ordered from smallest to largest read count
    -xxx:fill in 
  -methods ordered from smallest to largest write count
    -NOT IN filter w 0 writes
    -NOT EXISTS filter with correlated sub-query w 0 writes
    -correlated sub-query as derived column value w 0 writes
    -Flag a column w count equal to tableA row count
    -work table w count equal to tableB row count + tableA row count
  -method functional limit
    -NOT IN filter
      -Null values in tableA
    -xxx:fill in 
  -factors impacting method choice
    -tableA row count because of the number of searches 
    -tableB row count because of the number of rows that will be searched
    -if tableB has an index on the joined column(s)
      -if tableB joined column index is unique 
    -if tableA joined column has null values 
Main Successs Scenario:
  1. NOT IN filter
    select * from tableA where tableAId Not In (select tableBId from tableB)
  2. End 
Alternatives:
  1a. Left Outer Join
    1a1. xxx:fill in 
    1a2. Go to step 2
  1b. NOT EXISTS filter with correlated sub-query
    1b1. xxx:fill in 
    1b2. Go to step 2
  1c. Flag a column
    1c1. Join tableA to tableB and update tableB column to have a value of X
    1c2. select all records from tableB where column is not X
  1d. work table
    1d1. Insert all IDs from tableB into id table
    1d2. Join tableA to id table and delete rows in id table where the ids match
    1d3. Join id table to tableB to get only the tableB rows you want
  1e. correlated sub-query as derived column value (only do if needing one column with this logic and tableA has few rows)
    1e1. xxx:fill in 
  
