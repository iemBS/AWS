Cause Natural Error
Note:
  -Guidance @ 
    -https://dev.mysql.com/doc/refman/5.7/en/common-errors.html
    -https://dev.mysql.com/doc/refman/5.7/en/error-interfaces.html
  -Where Errors are born
    -list of all errors @ https://dev.mysql.com/doc/mysql-errors/5.7/en/ix01.html
      -errors born from the server are noted @ https://dev.mysql.com/doc/mysql-errors/5.7/en/server-error-reference.html
          -errors shown only in the Aurora Error log
            -xxx:fill in
          -errors shown only in the Client program
            -xxx:fill in
          -errors shown in the Aurora Error log and in the Client program
            -xxx:fill in
      -errors born from the client are noted @ https://dev.mysql.com/doc/mysql-errors/5.7/en/client-error-reference.html
        -xxx:fill in
      -errors born from the client or from the server are noted @ https://dev.mysql.com/doc/mysql-errors/5.7/en/global-error-reference.html
  -Where to view Errors
    -Client Programs
      -Client Programs get the errors from as noted @ https://dev.mysql.com/doc/refman/5.7/en/error-interfaces.html
        -Errors that originate on the client side from within the MySQL client library
        -Errors that originate on the server side and are sent to the client by the server. These are received within the client library, which makes them available to the host client program.
      -Client Programs such us 
        -MySQL Workbench
        -mysql command line command as noted @ https://dev.mysql.com/doc/refman/5.7/en/error-interfaces.html
        -AWS Glue
  -"stderr" directs where an error is sent to be displayed and that is noted @ https://dev.mysql.com/doc/refman/5.7/en/error-log.html
  -list of error classes and sub classes @ https://en.wikipedia.org/wiki/SQLSTATE
Main Success Scenario:
  1. "Cause 'dynamic SQL error'"
  2. xxx:fill in
  
Cause 'dynamic SQL error'
Main Success Scenario:
  1.xxx:fill in
  

Cause Natural Error using Non-Natural Means
Note:
  -Guidance @ 
    -https://dev.mysql.com/doc/mysql-errors/5.7/en/server-error-reference.html
Main Success Scenario:
  1. "Get an exclusive write table lock with user A and try to write to table with user B"
Alternatives:
  1a. "Provide Invalid Value to Procedure Parameter"
  1b. "User A runs query and User B kills query"
  1c. "Provide Incorrect number of Parameters to Procedure"
  1d. "Provide More Parameters to Procedure than Expected"
  1e. "Set SQL_MODE to a more restrictive mode that will cause errors"
  
  
Get an exclusive write table lock with user A and try to write to table with user B
Main Success Scenario:
  1. Get credentials for an admin or non-admin login and refer to it as User A
  2. Get credentials for an admin or non-admin login and refer to it as User B
  3. User A: Runs below query, where MyTbl is a table accessible by both users
    LOCK TABLES MyTbl WRITE;
  4. User B: Runs Select Count(1) From MyTbl
  5. User A: Runs the below query to see "Waiting for table metadata lock" in STATE column for User B's query
    Select * From Information_Schema.ProcessList Where COMMAND <> 'Sleep'
  6. User B: Stops select query
  7. User B: Runs SET @@Session.lock_wait_timeout = 20
  8. User B: Runs below query and watches it run for 20 seconds 
    LOCK TABLES MyTbl WRITE;
  9. User B: Sees error thrown with MySQL Error code of "1205" and message text of "Lock wait timeout exceeded; try restarting transaction"
  

Provide Invalid Value to Procedure Parameter
Main Success Scenario:
  1. xxx:fill in
 
 
Provide Fewer Parameters to Procedure than Expected
Main Success Scenario:
  1. Provide fewer parameters to procedure than expected
  2. Run procedure call
  3. See error with "1318" MySQL Error code and the below message text where X is the number of expected params and Y is the number provided
    Incorrect number of arguments for PROCEDURE [procedure name]; expected X, got Y
    
    
Provide More Parameters to Procedure than Expected
Main Success Scenario:
  1. Provide more parameters to procedure than expected
  2. Run procedure call
  3. See error with "1318" MySQL Error code and the below message text where X is the number of expected params and Y is the number provided
    Incorrect number of arguments for PROCEDURE [procedure name]; expected X, got Y
  
  
User A runs query and User B kills query
Note:
  -This error will show in the MySQL Error log and not the log you are writing errors to that are generated from your custom SQL code. 
  -Guidance @ 
    -https://dev.mysql.com/doc/refman/5.7/en/error-lost-connection.html
Main Success Scenario:
  1. Get credentials for an admin login and refer to it as User A
  2. Get credentials for a non-admin login and refer to it as User B
  3. User B: Start running a query that takes at least 1 minute to run 
  4. User A: Runs the following query to get the Process ID of User B's query
    Select * From Information_Schema.ProcessList Where COMMAND <> 'Sleep'
  5. User A: Runs the following query to kill User B's query, where "[ID]" is the process ID retrieved from the previous User A query
    Kill [ID]
  6. User A: Sees successful execution message for the KILL query
  7. User B: Sees an error with a message of "Lost connection to MySQL server during query" and MySQL Code of "2013"


Set SQL_MODE to a more restrictive mode that will cause errors
Note:
  -Guidance @ 
    -https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_sql_mode
    -https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html
    -https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html#sql-mode-strict
    -https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html#sql-mode-strict
  -sql_mode system variable is a dynamic parameter in Aurora
  -The 
Main Success Scenario:
  1. Run the following to your SQL instance for this session to throw an error  if a date is zero, part of date is zero, or there is division by zero 
    SET SESSION sql_mode = 'STRICT_ALL_TABLES,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO';
Alternativew:
  1a. Set sql_mode globally
    1a1. SET GLOBAL sql_mode = 'STRICT_ALL_TABLES,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO';



All Error classes below from https://en.wikipedia.org/wiki/SQLSTATE
----------------------------------------------------------------------
CLASS: 07, CLASS DESC: dynamic SQL error
CLASS: 08, CLASS DESC: connection exception
CLASS: 09, CLASS DESC: triggered action exception
CLASS: 0A, CLASS DESC: feature not supported
CLASS: 0D, CLASS DESC: invalid target type specification
CLASS: 0E, CLASS DESC: invalid schema name list specification
CLASS: 0F, CLASS DESC: locator exception
CLASS: 0K, CLASS DESC: resignal when handler not active
CLASS: 0L, CLASS DESC: invalid grantor
CLASS: 0M, CLASS DESC: invalid SQL-invoked procedure reference
CLASS: 0N, CLASS DESC: SQL/XML mapping error
CLASS: 0P, CLASS DESC: invalid role specification
CLASS: 0S, CLASS DESC: invalid transform group name specification
CLASS: 0T, CLASS DESC: target table disagrees with cursor specification
CLASS: 0U, CLASS DESC: attempt to assign to non-updatable column
CLASS: 0V, CLASS DESC: attempt to assign to ordering column
CLASS: 0W, CLASS DESC: prohibited statement encountered during trigger execution
CLASS: 0X, CLASS DESC: invalid foreign server specification
CLASS: 0Y, CLASS DESC: pass-through specific condition
CLASS: 0Z, CLASS DESC: diagnostics exception
CLASS: 10, CLASS DESC: XQuery error
CLASS: 20, CLASS DESC: case not found for case statement
CLASS: 21, CLASS DESC: cardinality violation
CLASS: 22, CLASS DESC: data exception
CLASS: 23, CLASS DESC: integrity constraint violation
CLASS: 24, CLASS DESC: invalid cursor state
CLASS: 25, CLASS DESC: invalid transaction state
CLASS: 26, CLASS DESC: invalid SQL statement name
CLASS: 27, CLASS DESC: triggered data change violation
CLASS: 28, CLASS DESC: invalid authorization specification
CLASS: 2B, CLASS DESC: dependent privilege descriptors still exist
CLASS: 2C, CLASS DESC: invalid character set name
CLASS: 2D, CLASS DESC: invalid transaction termination
CLASS: 2E, CLASS DESC: invalid connection name
CLASS: 2F, CLASS DESC: SQL routine exception
CLASS: 2H, CLASS DESC: invalid collation name
CLASS: 30, CLASS DESC: invalid SQL statement identifier
CLASS: 33, CLASS DESC: invalid SQL descriptor name
CLASS: 34, CLASS DESC: invalid cursor name
CLASS: 35, CLASS DESC: invalid condition number
CLASS: 36, CLASS DESC: cursor sensitivity exception
CLASS: 38, CLASS DESC: external routine exception
CLASS: 39, CLASS DESC: external routine invocation exception
CLASS: 3B, CLASS DESC: savepoint exception
CLASS: 3C, CLASS DESC: ambiguous cursor name
CLASS: 3D, CLASS DESC: invalid catalog name
CLASS: 3F, CLASS DESC: invalid schema name
CLASS: 40, CLASS DESC: transaction rollback
CLASS: 42, CLASS DESC: syntax error or access rule violation
  SUB_CLASS: 000, SUB_CLASS DESC: not sub class
    MySQL_Err_Num:1305, MySQL_Err_Num_DESC: xxx, HOW_OCCURRED: calling a procedure that does not exist 
CLASS: 44, CLASS DESC: with check option violation
CLASS: 45, CLASS DESC: unhandled user-defined exception
CLASS: 46, CLASS DESC: OLB-specific error
CLASS: 46, CLASS DESC: Java DDL
CLASS: HW, CLASS DESC: datalink exception
CLASS: HV, CLASS DESC: FDW-specific condition
CLASS: HY, CLASS DESC: CLI-specific condition
