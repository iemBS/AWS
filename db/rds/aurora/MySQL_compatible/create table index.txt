Create Table Index
Note:
  -Guidance @ https://dev.mysql.com/doc/refman/5.6/en/innodb-index-types.html
  -Guidance @ https://dev.mysql.com/doc/refman/5.6/en/create-index.html
  -Guidance @ https://dev.mysql.com/doc/refman/5.6/en/multiple-column-indexes.html
  -Guidance @ https://www.oreilly.com/library/view/mysql-reference-manual/0596002653/ch05s02.html
  -When you specify a primary key an index is automatically created. Guidance @ https://dev.mysql.com/doc/refman/5.6/en/primary-key-optimization.html
  -For a multi-column index, put the column with the fewest value first. 
    -Guidance @ https://stackoverflow.com/questions/24315151/does-order-of-fields-of-multi-column-index-in-mysql-matter
    -Guidance @ https://dev.mysql.com/doc/refman/5.7/en/multiple-column-indexes.html
  -A primary key and a unique index with the non-null constraint are basically the same
  -Having a number after a string column noted in an index indicates the first N characters will be used in the index. 
    -Specifying N for indexes can make the index file much smaller, which could save a lot of disk space and might also speed up INSERT operations.
  -When you create a UNIQUE constraint, MySQL creates a UNIQUE index behind the scenes. Guidance @ https://www.mysqltutorial.org/mysql-unique
  -A PRIMARY KEY constraint creates a UNIQUE index. 
  -You can have only one PRIMARY KEY constraint per table. 
  -Unique Key and Primary Key differences
    -Unique Key allows one NULL value
    -Primary key has a clustered index and unique key does not have a clustered index
  -Clustered indexes are stored physically on the table. This means they are the fastest and you can only have one clustered index per table. Non-clustered indexes are stored separately, and you can have as many as you want.
  -While executing a SELECT statement is faster on a clustered index than a non-clustered index, but INSERTs, UPDATEs, and DELETEs on that clustered index require more time. The extra time is needed because you are also updating the index during those operations. Rows are being sorted in the table to keep the clustered index up to date.
    -Guidance @ https://stackoverflow.com/questions/91688/what-are-the-differences-between-a-clustered-and-a-non-clustered-index
    -Guidance @ https://www.sqlshack.com/poor-database-indexing-sql-query-performance-killer-recommendations/
    -The index quality can go down if there are enough inserts, updates, and deletions in a table. 
    -If you are going to insert data into a table and create an index on it in two steps that are right next to each other, insert into the table first and then create the index next. 
Main Success Scenario:
  1. CREATE INDEX part_of_name ON customer (name(10));
Alternatives:
  1a. Create Unique Index
    1a1. CREATE UNIQUE INDEX part_of_name ON customer (name(10));
  1b. Create Clustered Index
    1b1. xxx:fill in
  1c. Create Multi-Column Index
    1c1. xxx:fill in
  
