Call Implicit Transaction Commit
Note:
  -Statements that can cause implicit commits @ https://dev.mysql.com/doc/refman/5.7/en/implicit-commit.html
  -more guidance @ https://dev.mysql.com/doc/refman/5.7/en/innodb-autocommit-commit-rollback.html
Main Success Scenario:
  1. "Call Implicit Commit with a Table or View"
Alternatives:
  1a. "Call Implicit Commit with a Routine"
  
  
Call Implicit Commit with a Table or View
Main Success Scenario:
  1. "Call Implicit Commit with a Table"
Alternatives
  1a. "Call Implicit Commit with a View"
  
  
Call Implicit Commit with a Table
Main Success Scenario:
  1. "Call Implicit Commit with a Non-Temp Table"
Alternatives:
  1a. "Call Implicit Commit with a Temp Table"
  
  
Call Implicit Commit with a Non-Temp Table
Main Success Scenario:
  1. xxx
  
  
Call Implicit Commit with a Temp Table
Main Success Scenario:
  1. Call ALTER TABLE statement
Alternatives:
  1a. "Call Implicit Commit with CREATE INDEX statement on Temp Table"
  1b. "Call Implicit Commit with CREATE TABLE statement on Temp Table"
  

Call Implicit Commit with CREATE INDEX statement on Temp Table
Pre-Conditions:
  -Creating an index within a CREATE Temporary TABLE statement will not trigger an implicit commit. 
Main Success Scenario:
  1. Use ALTER TABLE after CREATE Temporary TABLE
Alternatives:
  1a. Use CREATE INDEX after CREATE Temporary TABLE
  
  
Call Implicit Commit with CREATE TABLE statement on Temp Table
Main Success Scenario:
  1. Use CREATE Temporary TABLE
  2. Insert data into temporary table
  3. Rollback
  4. Data is removed from the temp table and the temp table still exists 
  
  
Call Implicit Commit with a View
Main Success Scenario:
  1. xxx


Call Implicit Commit with a Routine
Main Success Scenario:
  1. xxx
