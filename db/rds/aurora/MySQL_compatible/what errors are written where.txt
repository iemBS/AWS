What Errors are Written Where
Note:
  -Guidance @ 
    -source of errors shown in client @ https://dev.mysql.com/doc/refman/5.7/en/error-interfaces.html
    -https://dev.mysql.com/doc/mysql-errors/5.7/en/error-reference-introduction.html
    -list of possible errors generated in the MySQL Client Library @ https://dev.mysql.com/doc/mysql-errors/5.7/en/client-error-reference.html
    -list of possible errors generated in the Server @ https://dev.mysql.com/doc/mysql-errors/5.7/en/server-error-reference.html
    -list of possible errors genereated the MySQL Client Library or Server @ https://dev.mysql.com/doc/mysql-errors/5.7/en/global-error-reference.html
  -IF an interface is running queries on MySQL, errors generated in the MySQL Client Library via MySQL Workbench will not be seen in an alternate interface or the logs used by that alternate interface, if that alternate interface does not use the MySQL Client Library. 
  -Errors generated in the MySQL Client Library usually involve problems communicating with the server
  -Whether an error originates from within the client library or is received from the server, a MySQL client program may respond in varying ways. As just illustrated, the client may display the error message so the user can take corrective measures. The client may instead internally attempt to resolve or retry a failed operation, or take other action. Ref @ https://dev.mysql.com/doc/refman/5.7/en/error-message-elements.html#error-elements
  -Error code ranges for MySQL 8 has map of error source and where it can be written, ref @ https://dev.mysql.com/doc/refman/8.0/en/error-message-elements.html
  -Format of MySQL Error Number written to destination differs
    -When the server writes a message to the error log, it pads the error code with leading zeros to six digits and adds a prefix of MY- (examples: MY-000022, MY-010048).
    -When the server sends a message to a client program, it adds no zero-padding or prefix to the error code (examples: 1036, 3013).
  -There are two scopes in which system variables exist. Global variables affect the overall operation of the server. Session variables affect its operation for individual client connections. Ref @ https://dev.mysql.com/doc/refman/5.7/en/using-system-variables.html
  -Session state is stored on the server. Ref @ https://dev.mysql.com/doc/refman/5.7/en/session-state-tracking.html
  -Error Message Interfaces available for MySQL @ https://dev.mysql.com/doc/refman/5.7/en/error-interfaces.html
  -SQLSTATE has 5 bytes, 1st two bytes are the class, the last three bytes are a subclass
  -Beyond the SQLSTATE standard a DBMS can i to z or 5-9 as the 1st byte of the class or subclass to define that custom SQLSTATE
  -SQLSTATE standard from https://en.wikipedia.org/wiki/SQL:2011
  -Map SQLSTATE to MySQL Error # @ https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-reference-error-sqlstates.html
Main Success Scenario:
  1. Map of error sources and where they are written
  
    Source of Errors:
      -Errors from MySQL Client Library
      -Errors from the Server
      -Errors from X Plugin (Is this a client plugin?)
      -Third Party application
      
    Destinations of Errors:
      -MySQL Client Library (then passed onto the UI of the client using the MySQL Client Library)
      -Error Log
      -Glue Job Error Log
      
    MySQL Error Code Range map the source to the where it can be shown
      -Generated in Server or MySQL Client Library (global error codes)
        -1 to 999 sent to [xxx:fill in]
      -Generated in Server 
        -1,000 to 1,999 sent to MySQL Client Library and NOT sent to Aurora Error Log
        -10,000 to 49,999 sent to Error Log and NOT sent to MySQL Client Library (If the error is bubbled up to the calling software and causes an error in the calling software, will the error be written to the logging used for the calling software?)
      -Generated in MySQL Client Library 
        -2,000 to 2,999 sent to MySQL Client Library and NOT sent to Error Log
        -3,000 to 4,999 sent to MySQL Client Library and NOT sent to Error Log
      -Generated in X Plugin 
        -5,000 to 5,999 sent to MySQL Client Library (Is this sent to Error Log?)
      -Generated in Third Party application
        -50,000 to 51,999 (Is this sent to Error Log?)
      
      

  
    
  
