Get Common Aurora Error as Note
Note:
  -Guidance @ 
    -https://dev.mysql.com/doc/refman/5.7/en/communication-errors.html
  -By default, these messages are notes, but configurations may be able to be made in Aurora to make them into error type messages in the Aurora error log
  -Rollbacks are flagged as notes, because they are an accepted path flow in MySQL
  -Log Insights query must have a length <= 10,000
Main Success Scenario:
  1. See code below

    fields @message,@timestamp,@log
    | filter @message like /(?i)\[NOTE\]/ # non-case sensitive filter
    | parse @log "*:*" As logNm,logPth
    # Aborted connections are due to an unclean disconnection between the server and client. 
    # https://dev.mysql.com/doc/refman/5.7/en/communication-errors.html
    # https://cloud.google.com/sql/docs/mysql/diagnose-issues#connection
    # https://www.percona.com/blog/2016/05/16/mysql-got-an-error-reading-communication-packet-errors/
    | parse @message /(?<@nte1>(\[Note\] Aborted connection))/
    # Message occurs at server start. This is not found in the MySQL source code. 
    # https://dev.mysql.com/doc/refman/5.7/en/innodb-read-only-instance.html#:~:text=When%20the%20server%20is%20run,merges%20from%20the%20change%20buffer.&text=As%20a%20consequence%2C%20SHOW%20ENGINE,does%20not%20produce%20any%20output.
    | parse @message /(?<@nte2>(InnoDB: Started in read only mode))/
    # Buffer initialiation occurs at server start up
    # Buffer initialization is complete when it is cut up according to its config 
    # Buffer is flushed before restart
    # https://dev.mysql.com/doc/refman/5.7/en/innodb-buffer-pool.html
    # https://docs.oracle.com/cd/E17952_01/mysql-5.7-en/innodb-init-startup-configuration.html
    | parse @message /(?<@nte3>(InnoDB: Completed initialization of buffer pool))/
    # Indicates the availability of the more secure IPv6 IP addresses
    | parse @message /(?<@nte4>(\[Note\] IPv6 is available))/ 
    # Indicates the rollback of a transaction has been completed. The start of the transaction should be findable using the transaction id
    | parse @message /(?<@nte5>(InnoDB: Rollback of trx with id [0-9]*? completed))/
    # Non-compressed, user-created temporary tables and on-disk internal temporary tables are created in a shared temporary tablespace.
    # Temporary tablespace is stored in the "ibtmp1" file 
    # When "ibtmp1" file is auto extended, it stays at its extended size until the server is restarted
    # Message shows at server start
    # https://dev.mysql.com/doc/refman/5.7/en/innodb-temporary-tablespace.html
    # Triggered in "srv_open_tmp_tablespace" function @ https://github.com/mysql/mysql-server/blob/3e90d07c3578e4da39dc1bce73559bbdf655c28c/storage/innobase/srv/srv0start.cc
    | parse @message /(?<@nte6>(InnoDB: Creating shared tablespace for temporary tables))/
    # A non-prepared transaction may be refering to an XA transaction that is not in the PREPARED state
    # https://dev.mysql.com/doc/refman/5.7/en/xa.html
    | parse @message /(?<@nte7>(InnoDB: Rollback of non-prepared transactions completed))/
    # Page-Cleaner is a background thread in MySQL server. The responsibility of this thread is to read the dirty pages in the MySQL buffer pool and push the data into the disk for fault-tolerance so as to prevent any permanent data loss.
    # https://medium.com/@swayamraina/mysql-pagecleaner-4598a67db317#:~:text=Page%2DCleaner%20in%20basic%20terms,prevent%20any%20permanent%20data%20loss.
    # https://mariadb.com/kb/en/innodb-page-flushing/
    | parse @message /(?<@nte8>(InnoDB: page_cleaner worker priority: .*?))/
    # "Trx id counter is" message is printed to the log right after this one
    # This and the "Trx id counter is" message are called when a database is started. Both messages occur in a function that creates and initializes the central memory structures for the transaction system.
    # https://github.com/mysql/mysql-server/blob/3e90d07c3578e4da39dc1bce73559bbdf655c28c/storage/innobase/trx/trx0sys.cc
    | parse @message /(?<@nte9>(InnoDB: [0-9]*? transaction\(s\) which must be rolled back or cleaned up in total [0-9]*? row operations to undo))/
    # Non-redo rollback segments are used for temp tables. Noted in "trx_undo_prev_version_build" function @ https://github.com/mysql/mysql-server/blob/3e90d07c3578e4da39dc1bce73559bbdf655c28c/storage/innobase/trx/trx0rec.cc
    # These will NOT be kept or rolled back
    # There is a 128 innodb rollback segment max. 32 go to temp rollback segments and 96 go to non-temp rollback segments. See ref @ https://github.com/mysql/mysql-server/blob/3e90d07c3578e4da39dc1bce73559bbdf655c28c/storage/innobase/trx/trx0trx.cc
    # This message seems to be generated by Aurora, because it is not found in the MySQL source code
    | parse @message /(?<@nte10>(InnoDB: [0-9]*? non-redo rollback segment\(s\) are active))/
    # Redo rollback segments are used for non-temp tables. Noted in "trx_undo_prev_version_build" function @ https://github.com/mysql/mysql-server/blob/3e90d07c3578e4da39dc1bce73559bbdf655c28c/storage/innobase/trx/trx0rec.cc
    # MySQL will try to roll these back
    # There is a 128 innodb rollback segment max. 32 go to temp rollback segments and 96 go to non-temp rollback segments. See ref @ https://github.com/mysql/mysql-server/blob/3e90d07c3578e4da39dc1bce73559bbdf655c28c/storage/innobase/trx/trx0trx.cc
    # This message seems to be generated by Aurora, because it is not found in the MySQL source code
    | parse @message /(?<@nte11>(InnoDB: [0-9]*? redo rollback segment\(s\) found. [0-9]*? redo rollback segment\(s\) are active))/
    # Message triggered in "srv_start" function @ https://github.com/mysql/mysql-server/blob/3e90d07c3578e4da39dc1bce73559bbdf655c28c/storage/innobase/srv/srv0start.cc
    | parse @message /(?<@nte12>(InnoDB: Initializing buffer pool, total size = .*?G, instances = .*?, chunk size = .*?G))/
    # "ibtmp1" file holds the temporary tablespace
    # There is one "ibtmp1" file per server 
    # When "ibtmp1" file is auto extended, it stays at its extended size until the server is restarted
    # "size is now" message generated in source code at https://github.com/mysql/mysql-server/blob/3e90d07c3578e4da39dc1bce73559bbdf655c28c/storage/innobase/fsp/fsp0sysspace.cc
    | parse @message /(?<@nte13>(InnoDB: File '\.\/ibtmp1' size is now [0-9]*? MB))/
    # Rolling back a transaction and indicating how many rows to rollback
    # https://github.com/mysql/mysql-server/blob/3e90d07c3578e4da39dc1bce73559bbdf655c28c/storage/innobase/trx/trx0roll.cc
    | parse @message /(?<@nte14>(InnoDB: Rolling back trx with id [0-9]*?, [0-9]*? rows to undo InnoDB: Progress in percents))/
    # xxx
    | parse @message /(?<@nte15>(InnoDB: Rolling back trx with id [0-9]*?, [0-9]*? rows to undo [0-9]*?))/
    # "ibtmp1" file holds the temporary tablespace
    # There is one "ibtmp1" file per server 
    # When "ibtmp1" file is auto extended, it stays at its extended size until the server is restarted
    # Message triggered in "set_size" function @ https://github.com/mysql/mysql-server/blob/3e90d07c3578e4da39dc1bce73559bbdf655c28c/storage/innobase/fsp/fsp0sysspace.cc
    # "set_size" function fills file with zeros
    | parse @message /(?<@nte16>(InnoDB: Setting file '\.\/ibtmp1' size to [0-9]*? MB\. Physically writing the file full\.))/
    # Error message occurs in the "trx_rollback_or_clean_recovered" function in the source code. 
    # What "trx_rollback_or_clean_recovered" function does: Rollback or clean up any incomplete transactions which were encountered in crash recovery.  If the transaction already was committed, then we clean up a possible insert undo log. If the transaction was not yet committed, then we roll it back.
    # https://github.com/mysql/mysql-server/blob/3e90d07c3578e4da39dc1bce73559bbdf655c28c/storage/innobase/trx/trx0roll.cc
    | parse @message /(?<@nte17>(InnoDB: Starting in background the rollback of uncommitted transactions))/
    # Latest transaction number 
    # Message from the "trx_sys_init_at_db_start" function in the source code
    # "trx_sys_init_at_db_start" function desc: Creates and initializes the central memory structures for the transaction system. This is called when the database is started.
    | parse @message /(?<@nte18>(InnoDB: Trx id counter is [0-9]*?))/
    # Message exists at the following location, but not triggered from there: https://github.com/mysql/mysql-server/blob/3e90d07c3578e4da39dc1bce73559bbdf655c28c/share/messages_to_error_log.txt
    # Message triggered by "srv_start_wait_for_purge_to_start" function in https://github.com/mysql/mysql-server/blob/3e90d07c3578e4da39dc1bce73559bbdf655c28c/storage/innobase/srv/srv0start.cc
    | parse @message /(?<@nte19>(InnoDB: Waiting for purge to start))/
    # Msg may be due to the underlying Linux file system NOT supporting PUNCH HOLE
    # This appears to be a build issue found in 2015 and the MySQL team is not willing to fix. 
    # https://dev.mysql.com/doc/refman/5.7/en/innodb-page-compression.html
    # https://bugs.mysql.com/bug.php?id=77974
    | parse @message /(?<@nte20>(InnoDB: PUNCH HOLE support not available))/
    # Always shows at server start
    # https://bugs.mysql.com/bug.php?id=80248
    | parse @message /(?<@nte21>(InnoDB: Number of pools: .*?))/
    # Message triggered by "srv_start" function @ https://github.com/mysql/mysql-server/blob/3e90d07c3578e4da39dc1bce73559bbdf655c28c/storage/innobase/srv/srv0start.cc
    # This message is seen in the server start
    | parse @message /(?<@nte22>(InnoDB: Compressed tables use zlib .*?))/
    # Messaged triggered in "srv_start" function @ https://github.com/mysql/mysql-server/blob/3e90d07c3578e4da39dc1bce73559bbdf655c28c/storage/innobase/srv/srv0start.cc
    # Message occurrs at server start only, when the server is set to read-only
    | parse @message /(?<@nte23>(InnoDB: Disabling background log and ibuf IO write threads))/
    | parse @message /(?<@nteX>(xxx))/
    | field Concat(@nte1,@nte2,@nte3,@nte4,@nte5,@nte6,@nte7,@nte8,@nte9,@nt10) As nteType1
    | field Concat(nteType1,@nte11,@nte12,@nte13,@nte14,@nte15,@nte16,@nte17,@nte18,@nte19) As nteType2
    | field Concat(nteType2,@nte20,@nte21,@nte22,@nte23) As nteType
    #| filter isblank(nteType) # limit to non-typed notes
    | parse @message "*[*]*" As tsUtc,nteFlg,msg # allows for sorting on true message
    | display logPth,@timestamp,nteType,msg 
    | sort msg
