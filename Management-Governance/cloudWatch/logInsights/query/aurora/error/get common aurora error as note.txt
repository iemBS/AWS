Get Common Aurora Error as Note
Note:
  -Guidance @ 
    -https://dev.mysql.com/doc/refman/5.7/en/communication-errors.html
  -By default, these messages are notes, but configurations may be able to be made in Aurora to make them into error type messages in the Aurora error log
  -Rollbacks are flagged as notes, because they are an accepted path flow in MySQL
Main Success Scenario:
  1. See code below

    fields @message,@timestamp,@log
    | filter @message like /(?i)\[NOTE\]/ # non-case sensitive filter
    | parse @log "*:*" As logNm,logPth
    # Aborted connections are due to an unclean disconnection between the server and client. 
    # https://dev.mysql.com/doc/refman/5.7/en/communication-errors.html
    # https://cloud.google.com/sql/docs/mysql/diagnose-issues#connection
    # https://www.percona.com/blog/2016/05/16/mysql-got-an-error-reading-communication-packet-errors/
    | parse @message /(?<@nte1>(\[Note\] Aborted connection))/
    # https://dev.mysql.com/doc/refman/5.7/en/innodb-read-only-instance.html#:~:text=When%20the%20server%20is%20run,merges%20from%20the%20change%20buffer.&text=As%20a%20consequence%2C%20SHOW%20ENGINE,does%20not%20produce%20any%20output.
    | parse @message /(?<@nte2>(InnoDB: Started in read only mode))/
    # Buffer initialiation occurs at server start up
    # Buffer initialization is complete when it is cut up according to its config 
    # Buffer is flushed before restart
    # https://dev.mysql.com/doc/refman/5.7/en/innodb-buffer-pool.html
    # https://docs.oracle.com/cd/E17952_01/mysql-5.7-en/innodb-init-startup-configuration.html
    | parse @message /(?<@nte3>(InnoDB: Completed initialization of buffer pool))/
    # Indicates the availability of the more secure IPv6 IP addresses
    | parse @message /(?<@nte4>(\[Note\] IPv6 is available))/ 
    # Indicates the rollback of a transaction has been completed. The start of the transaction should be findable using the transaction id
    | parse @message /(?<@nte5>(InnoDB: Rollback of trx with id [0-9]*? completed))/
    # Non-compressed, user-created temporary tables and on-disk internal temporary tables are created in a shared temporary tablespace.
    # Temporary tablespace is stored in the file with the "ibtmp1" extension 
    # https://dev.mysql.com/doc/refman/5.7/en/innodb-temporary-tablespace.html
    | parse @message /(?<@nte6>(InnoDB: Creating shared tablespace for temporary tables))/
    # A non-prepared transaction may be refering to an XA transaction that is not in the PREPARED state
    # https://dev.mysql.com/doc/refman/5.7/en/xa.html
    | parse @message /(?<@nte7>(InnoDB: Rollback of non-prepared transactions completed))/
    # Page-Cleaner is a background thread in MySQL server. The responsibility of this thread is to read the dirty pages in the MySQL buffer pool and push the data into the disk for fault-tolerance so as to prevent any permanent data loss.
    # https://medium.com/@swayamraina/mysql-pagecleaner-4598a67db317#:~:text=Page%2DCleaner%20in%20basic%20terms,prevent%20any%20permanent%20data%20loss.
    # https://mariadb.com/kb/en/innodb-page-flushing/
    | parse @message /(?<@nte8>(InnoDB: page_cleaner worker priority: .*?))/
    # "Trx id counter is" message is printed to the log right after this one
    # This and the "Trx id counter is" message are called when a database is started. Both messages occur in a function that creates and initializes the central memory structures for the transaction system.
    # https://github.com/mysql/mysql-server/blob/3e90d07c3578e4da39dc1bce73559bbdf655c28c/storage/innobase/trx/trx0sys.cc
    | parse @message /(?<@nte9>(InnoDB: [0-9]*? transaction\(s\) which must be rolled back or cleaned up in total [0-9]*? row operations to undo))/
    # xxx:fill in 
    | parse @message /(?<@nte10>(InnoDB: [0-9]*? non-redo rollback segment\(s\) are active))/
    # xxx:fill in 
    | parse @message /(?<@nte11>(InnoDB: [0-9]*? redo rollback segment\(s\) found. [0-9]*? redo rollback segment\(s\) are active))/
    # xxx:fill in 
    | parse @message /(?<@nte12>(InnoDB: Initializing buffer pool, total size = .*?G, instances = .*?, chunk size = .*?G))/
    # xxx
    | parse @message /(?<@nte13>(InnoDB: File '\.\/ibtmp1' size is now [0-9]*? MB))/
    # xxx
    | parse @message /(?<@nte14>(InnoDB: Rolling back trx with id [0-9]*?, [0-9]*? rows to undo InnoDB: Progress in percents))/
    # xxx
    | parse @message /(?<@nte15>(InnoDB: Rolling back trx with id [0-9]*?, [0-9]*? rows to undo [0-9]*?))/
    # xxx
    | parse @message /(?<@nte16>(InnoDB: Setting file '\.\/ibtmp1' size to [0-9]*? MB\. Physically writing the file full\.))/
    # xxx
    | parse @message /(?<@nte17>(InnoDB: Starting in background the rollback of uncommitted transactions))/
    # xxx
    | parse @message /(?<@nte18>(InnoDB: Trx id counter is [0-9]*?))/
    # xxx
    | parse @message /(?<@nte19>(InnoDB: Waiting for purge to start))/
    # Msg may be due to the underlying Linux file system supporting PUNCH HOLE
    # https://dev.mysql.com/doc/refman/5.7/en/innodb-page-compression.html
    | parse @message /(?<@nte20>(InnoDB: PUNCH HOLE support not available))/
    | parse @message /(?<@nteX>(xxx))/
    | field Concat(@nte1,@nte2,@nte3,@nte4,@nte5,@nte6,@nte7,@nte8,@nte9,@nt10) As nteType1
    | field Concat(nteType1,@nte11,@nte12,@nte13,@nte14,@nte15,@nte16,@nte17,@nte18,@nte19) As nteType2
    | field Concat(nteType2,@nte20) As nteType
    | filter isblank(nteType) # limit to non-typed notes
    | parse @message "*[*]*" As tsUtc,nteFlg,msg # allows for sorting on true message
    | display logPth,@timestamp,nteType,msg 
    | sort msg
